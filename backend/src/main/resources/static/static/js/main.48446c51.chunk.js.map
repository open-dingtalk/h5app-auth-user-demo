{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","clientId","setClientId","userInfo","setUserInfo","useEffect","axios","get","then","response","data","appKey","className","nick","mobile","onClick","openAuthMiniApp","panelHeight","path","extraData","rpcScope","fieldScope","type","ext","JSON","stringify","from","res","result","authCode","catch","error","alert","block","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAkFeA,MA1Ef,WACI,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAwDA,OAtDAC,qBAAU,WACNC,IAAMC,IAAI,WACLC,MAAK,SAAAC,GACFP,EAAYO,EAASC,KAAKA,KAAKC,aAExC,IAkDC,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,gCACI,+DACA,mDAAOT,EAASU,QAChB,+DAASV,EAASW,aAEtB,cAAC,IAAD,CAAQC,QAnDA,WAChBC,0BAAgB,CACZC,YAAa,YACbC,KAAM,kBACNC,UAAW,CACPlB,SAAUA,EACVmB,SAAU,oBACVC,WAAY,sBACZC,KAAM,EACNC,IAAKC,KAAKC,UAAU,IACpBC,KAAM,MAEXlB,MAAK,SAACmB,GAELrB,IAAMC,IAAa,kBAAoBoB,EAAIC,OAAOC,UAC7CrB,MAAK,SAAAC,GACFL,EAAY,eACLK,EAASC,KAAKA,UAGxBoB,OAAM,SAAAC,GACHC,MAAMR,KAAKC,UAAUM,WA8BKE,OAAK,EAACX,KAAK,UAAzC,kDACA,uBACA,cAAC,IAAD,CAAQP,QA3BE,WAClBC,0BAAgB,CACZE,KAAM,qBACNC,UAAW,CACPlB,SAAUA,EACVmB,SAAU,oBACVC,WAAY,sBACZC,KAAM,EACNC,IAAKC,KAAKC,UAAU,IACpBC,KAAM,MAEXlB,MAAK,SAACmB,GAELO,QAAQC,IAAIR,OAcwBM,OAAK,EAACX,KAAK,UAA3C,oEChEDc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.48446c51.chunk.js","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport {useEffect, useState} from 'react';\nimport './App.css';\nimport {openAuthMiniApp} from \"dingtalk-design-libs/biz/openAuthMiniApp\";\nimport {Button} from 'antd';\nimport axios from 'axios';\n\nfunction App() {\n    const [clientId, setClientId] = useState(null);\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(() => {\n        axios.get('/config')\n            .then(response => {\n                setClientId(response.data.data.appKey);\n            })\n    }, []);\n\n    //内网穿透工具介绍:\n    // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n    // 替换成后端服务域名\n    const domain = \"\";\n    const openMiniApp = () => {\n        openAuthMiniApp({\n            panelHeight: \"percent75\",\n            path: \"pages/home/home\", //不要改,这里是小程序dingwlanwvdmrtjjwdmd下的一个页面地址\n            extraData: {\n                clientId: clientId, // 应用ID(唯一标识)\n                rpcScope: \"Contact.User.Read\",\n                fieldScope: \"Contact.User.mobile\",\n                type: 0,\n                ext: JSON.stringify({}),\n                from: \"\",\n            },\n        }).then((res) => {\n            // 处理返回数据\n            axios.get(domain + \"/user?authCode=\" + res.result.authCode)\n                .then(response => {\n                    setUserInfo({\n                        ...response.data.data\n                    })\n                })\n                .catch(error => {\n                    alert(JSON.stringify(error))\n                    // console.log(error.message)\n                })\n        })\n    }\n    const cancelMiniApp = () => {\n        openAuthMiniApp({\n            path: \"pages/cancel/index\",\n            extraData: {\n                clientId: clientId, // 应用ID(唯一标识)\n                rpcScope: \"Contact.User.Read\",\n                fieldScope: \"Contact.User.mobile\",\n                type: 0,\n                ext: JSON.stringify({}),\n                from: \"\",\n            },\n        }).then((res) => {\n            // 处理返回数据\n            console.log(res);\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div>\n                    <p>用户信息：</p>\n                    <p>姓名：{userInfo.nick}</p>\n                    <p>电话号码：{userInfo.mobile}</p>\n                </div>\n                <Button onClick={openMiniApp} block type=\"primary\">打开授权弹窗</Button>\n                <br/>\n                <Button onClick={cancelMiniApp} block type=\"primary\">打开取消授权弹窗</Button>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}